name: Build and Test

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: snap-fetch
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: snap-fetch.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            bin: snap-fetch

    steps:
    - uses: actions/checkout@v3
    
    - name: Install latest Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
        profile: minimal

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --target ${{ matrix.target }}

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: snap-fetch-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/${{ matrix.bin }}

  # Create GitHub release with binaries when a tag is pushed
  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Create artifacts directory
        run: mkdir -p artifacts

      - name: Download Linux Binary
        uses: actions/download-artifact@v4
        with:
          name: snap-fetch-x86_64-unknown-linux-gnu
          path: artifacts

      - name: Download Windows Binary
        uses: actions/download-artifact@v4
        with:
          name: snap-fetch-x86_64-pc-windows-msvc
          path: artifacts

      - name: Download macOS Binary
        uses: actions/download-artifact@v4
        with:
          name: snap-fetch-x86_64-apple-darwin
          path: artifacts

      - name: List downloaded artifacts
        run: ls -la artifacts/

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/snap-fetch
          asset_name: snap-fetch-linux-x86_64
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/snap-fetch.exe
          asset_name: snap-fetch-windows-x86_64.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/snap-fetch
          asset_name: snap-fetch-macos-x86_64
          asset_content_type: application/octet-stream 